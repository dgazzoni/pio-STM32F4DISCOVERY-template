; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:disco_f407vg]
platform = ststm32
board = disco_f407vg
framework = stm32cube
board_build.f_cpu = 24000000L
build_flags = -DHSE_VALUE=8000000 -fstack-usage -fcallgraph-info -g
test_build_src = yes
platform_packages = platformio/toolchain-gccarmnoneeabi@>=1.100301.220327

; Uncomment line below to debug unit tests instead of main code
; debug_test = *

; add "Custom" -> "SWO Viewer" project task
extra_scripts = pre:add_swo_viewer.py
; set SWO trace clock in frequency to configured HCLK frequency
; in this example, board is clocked via HSI to 64MHz.
; if this number is wrong, there will be no output.
swo_trace_clkin_freq = 24000000
swo_trace_freq = 2000000
; if you want to see SWO outputs during debugging, a custom
; debug server invocation must be used.
; adapt interface and target accordingly.
; this entails changing the traceclk parameter to match
; the swo_trace_clkin_freq above.
; the SWO pin frequency param is irrelevant, since we are forwarding to
; tcl_trace, but OpenOCD will otherwise fail to enable the TPIU.
; this is used when starting debugging, not in the SWO Viewer task.
; after debugging starts, one must manually start the swo_viewer.py with
; python swo_parser.py --dont-run
debug_server = $PLATFORMIO_CORE_DIR/packages/tool-openocd/bin/openocd
  -f $PLATFORMIO_CORE_DIR/packages/tool-openocd/scripts/interface/stlink-v2-1.cfg
  -f $PLATFORMIO_CORE_DIR/packages/tool-openocd/scripts/board/stm32f4discovery.cfg
  -c "stm32f4x.tpiu configure -protocol uart"
  -c "stm32f4x.tpiu configure -output -"
  -c "stm32f4x.tpiu configure -traceclk 24000000"
  -c "stm32f4x.tpiu configure -pin-freq 2000000"
  -c "stm32f4x.tpiu configure -formatter 0"
  -c "itm ports on"
  -c "stm32f4x.tpiu enable"
  -c "tcl_port 6666"

; Unit Testing
test_testing_command =
    ${platformio.test_dir}/../swo_test_runner.py
    ${platformio.packages_dir}
    ${platformio.test_dir}/..
    60
